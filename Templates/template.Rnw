\documentclass[12pt,letterpaper]{article}

% The following packages are not necessairly essential for you
% You can remove some or add more in order to meet your needs
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage{amsthm}
\usepackage[hmargin=3cm,vmargin=3.5cm]{geometry}
\usepackage[utf8x]{inputenc}
\usepackage[active]{srcltx}
\usepackage{amsmath}
\usepackage{verbatim}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{dcolumn}
\usepackage{graphicx}
\usepackage{multirow}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% These are some definition of commands that I like
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newcommand\R{ \mathbb{R} }
\newcommand\N{ \mathbb{N} }
\newcommand\C{ \mathbb{C} }
\newcommand\Q{\mathbb{Q}}
\newcommand{\citep}{\citeasnoun} % just to make it short
\newcommand\T{{\cal T}}
\newcommand\Hi{{\cal H}}
\newcommand\La{{\cal L}}
\newcommand\plim{plim}
\renewcommand{\epsilon}{\varepsilon}
\newtheorem{theorem}{Theorem}
\newtheorem{col}{Corollary}
\newtheorem{lem}{Lemma}
\newtheorem{ass}{Assumption}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% You can change the title and the name of the author
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\author{Han Kou \footnote{Department of Economics, University of Waterloo, Ontario, Canada (h3kou@uwaterloo.ca)} }
\title{\textbf ECON 673 Assignment 1}
\date{\today}

% Everything starts here. You can delete everything between begin{document} 
% and end{document} and start writting your own stuff. 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{document}

\maketitle


\newpage


\section{Question 1 Matrix Manipulation}
\subsection{Question (A)}
<<eval=FALSE>>=
makeTeam <- function(data, team)
  {
  team <- match.arg(team, unique(data[,"Home"]))
  which <- data[,"Home"] == team | data[,"Away"] == team
  obj <- data[which,]
  chk <- obj[,"Period"] %in% c(1:4,"OT","SO")
  obj <- obj[chk,]
  obj[obj[,"Period"]=="4","Period"] <- "OT"
  class(obj) <- "team"
  attr(obj, "team") <- team
  obj
}

Boston <- makeTeam(res, "BOSTON BRUINS")


print.team <- function(teamname, print=TRUE){
  games.played <- length(unique(teamname[,1]))
  years.played <- length(as.numeric(unique(strtrim(teamname[,1],4))))
  game.year <- as.numeric(unique(strtrim(teamname[,1],4)))-1
  team_name <- attr(teamname, "team")
  if (print)
    cat("   Goal Data for: ", team_name, "\n",
        "****************************************", "\n",
        "\n",
        " Games Played: ", games.played, "\n",
        " Seasons: ", game.year[1], "-", game.year[2], "to",
        game.year[years.played], "-", game.year[years.played]+1
        )
}


Boston.print <- print.team(Boston, print=TRUE)
@

\newpage
\subsection{Question (B)}
<<eval=FALSE>>=
bostonplot <- c()
plot <- function(teamname){
  team_name <- attr(teamname,"team")
  for (i in 1:length(teamname[,6])) {
    if(team[,6][i]=="1" & teamname[,7][i]==team_name){
      bostonplot <- c("1",bostonplot)
    }
  }
  for (i in 1:length(teamname[,6])) {
    if(team[,6][i]=="2" & teamname[,7][i]==team_name){
      bostonplot <- c("2",bostonplot)
    }
  }
  for (i in 1:length(teamname[,6])) {
    if(team[,6][i]=="3" & teamname[,7][i]==team_name){
      bostonplot <- c("3",bostonplot)
    }
  }
  for (i in 1:length(teamname[,6])) {
    if(team[,6][i]=="OT" & teamname[,7][i]==team_name){
      bostonplot <- c("OT",bostonplot)
    }
  }
  for (i in 1:length(teamname[,6])) {
    if(team[,6][i]=="SO" & teamname[,7][i]==team_name){
      bostonplot <- c("SO",bostonplot)
    }
  }

barplot(bostonplot, main="Goals per periods: BOSTON BRUINS", team_name)
}
@


\newpage
\subsection{Question (C)}
<<eval=FALSE>>=
Montreal <- makeTeam(res, "MONTREAL")
n <- c()
m <- c()
compare <- function(team1, team2){
  team.1 <- attr(team1, "team")
  team.2 <- attr(team2, "team")
  for (i in 1:length(team1[,7])) {
    if(team1[,7][i] == team.1){
      n <- c(n, as.numeric(strtrim(team1[,1][i],4)))}
  }
  for (i in 1:length(team2[,7])) {
    if(team2[,7][i] == team.2){
      m <- c(m, as.numeric(strtrim(team2[,1][i],4)))}
  }
    plot(table(n), type = "b", col = "blue", 
         main="Goals Per Season", xlab="Season", ylab="Goals",ylim=c(120,280))
    lines(table(m), type = "b", col = "red")
    legend("topright", c(team.1, team.2),
           lty = c(1,1),
           col = c("blue", "red"))
}
compare(Boston, Montreal)

@


\newpage
\subsection{Question D}
<<eval=FALSE>>=
numWin <- function(team, season){
  back <- as.numeric(strtrim(season,4))+1
  gameid <- unique(subset(team[,"Game_id"], strtrim(team[,"Game_id"],4)==back))
  isWin <- function(g, team){
    a <- sum(team[, "Goal_Team"]==attr(team,"team")&team[,"Game_id"]==g)
    b <- sum(!team[,"Goal_Team"]==attr(team,"team")&team[,"Game_id"]==g)
    if (a>b){
      return(TRUE)
    }
    else if (a<=b){
      return(FALSE)}
  }
  wins <- rep(0,length(gameid))
  i <- 1
  for (g in gameid) {
    wins[i]=isWin(g,team)
    i <- 1+i
  }
  x <- c(sum(wins), length(gameid))
  names(x) <- c("wins", "gamesplayed")
  x
}

@

\newpage
\subsection{Question E}
<<eval=FALSE>>=
getAllWins <- function(team){
  year <- as.numeric(unique(strtrim(team[,"Game_id"],4)))
  season <- paste(year-1, "-", year, sep = "")
  x <- rbind(rep(0, length(season)), rep(0, length(season)))
  i <- 1
  for (s in season) {
    x[,i] <- numWin(team,s)
    i <- i+1
  }
  rownames(x) <- paste(c("wins","gameplayed"))
  colnames(x) <- paste(season)
  x
}

atable <- function(team1, team2, team3){
  library(xtable)
  matrix <- cbind(getAllWins(team1)[1,], getAllWins(team2)[1,],
                  getAllWins(team3)[1,])
  colnames(matrix) <- paste(c(attr(team1,"team"), attr(team2, "team"),
                              attr(team3,"team")))
  xtable(matrix, digits=0)
}
@
<<eval=FALSE>>=
Pittsburgh <- makeTeam(res, "PITTSBURGH")
atable(Montreal, Boston, Pittsburgh)
@

\newpage
\subsection{Question F}
<<eval=FALSE>>=
summary <- function(team){
  print.team(team)
  ratio <- getAllWins(team)[1,]/getAllWins(team)[2,]
  b <- as.matrix(ratio)
  rownames(b) <- paste(colnames(getAllWins(team)))
  season.min <- rownames(unique(subset(b,b[,1]==min(b[,1]))))
  season.max <- rownames(unique(subset(b,b[,1]==max(b[,1]))))
  min <- min(ratio)
  max <- max(ratio)
  options(digits=2)
  cat("The Best Season is ", season.max, "with a ratio wins to games played of",
      max,"\n")
  cat("The Workst Season is ", season.min, "with a ratio wins to games played of",
      min,"\n")
}
summary(Montreal)
summary(Boston)
@

\end{document}

